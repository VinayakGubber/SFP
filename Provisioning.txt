//Command to search PID and Kill it

sudo lsof -i :<port_number>
sudo kill -9 <PID>

//------------------------------------------------------------//

Changes to be made in the following files 

-(In the EC2 instance)
/server.js
/routes/s3Routes.js

-(In the local machine and then uploaded onto the s3 bucket)
/script.js

//------------------------------------------------------------//
//For EC2 Instance
/*

sudo apt update
sudo apt install nodejs npm -y
sudo apt install mysql-client -y
sudo apt install apache2 -y
sudo systemctl enable apache2
sudo systemctl start apache2
git clone https://github.com/VinayakGubber/SFP.git
cd /var/www/html
cd SFP
npm install
npm install aws-sdk

*/

//------------------------------------------------------------//

//------------------------------------------------------------//

// BEFORE IMPLEMENTING IAM

//S3 Bucket Policy (Before implementing IAM)

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "Statement1",
      "Effect": "Allow",
      "Principal": "*",
      "Action": "s3:*",
      "Resource": "< S3 Bucket arn >/*"
    }
  ]
}

//------------------------------------------------------------//
//S3 CORS policy


[
    {
        "AllowedHeaders": [
            "*"
        ],
        "AllowedMethods": [
            "GET",
            "PUT",
            "POST",
            "DELETE",
            "HEAD"
        ],
        "AllowedOrigins": [
            "*"
        ],
        "ExposeHeaders": [
            "ETag"
        ],
        "MaxAgeSeconds": 3000
    }
]


//------------------------------------------------------------//

// AFTER IMPLEMENTING IAM

//S3 Bucket Policy 


{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "Statement1",
      "Effect": "Allow",
      "Principal": "*",
      "Action": "s3:*",
      "Resource": "< S3 bucket arn >/*"
    },
    {
      "Sid": "ExplicitDenyWriteDeleteAndBucketDeleteForSpecificUser",
      "Effect": "Deny",
      "Principal": {
        "AWS": "<IAM user arn>"
      },
      "Action": [
        "s3:PutObject",
        "s3:PutObjectAcl",
        "s3:DeleteObject",
        "s3:DeleteObjectVersion",
        "s3:AbortMultipartUpload",
        "s3:RestoreObject",
        "s3:ReplicateObject",
        "s3:ReplicateDelete",
        "s3:ReplicateTags",
        "s3:PutObjectTagging",
        "s3:DeleteObjectTagging",
        "s3:DeleteBucket"
      ],
      "Resource": [
        "< S3 bucket arn >",
        "< S3 bucket arn >/*"
      ]
    }
  ]
}


//------------------------------------------------------------//

/* To be attached to the user*/

//Policy for listing buckets------1


{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AllowListAllBuckets",
            "Effect": "Allow",
            "Action": "s3:ListAllMyBuckets",
            "Resource": "arn:aws:s3:::*"
        }
    ]
}



//Policy for listing buckets------2

AWS managed policy 
AmazonS3ReadOnlyAccess

//------------------------------------------------------------//

//------------------------------------------------------------//


-- Create database 
CREATE DATABASE IF NOT EXISTS StudentFeedback;

-- Use the database
USE StudentFeedback;

-- Drop tables if they already exist (for clean setup)
DROP TABLE IF EXISTS complaints;
DROP TABLE IF EXISTS users;

-- Create users table
CREATE TABLE users (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    roll_number VARCHAR(20) NOT NULL UNIQUE,
    password VARCHAR(100) NOT NULL,
    role ENUM('student', 'admin') DEFAULT 'student',
    email VARCHAR(100) DEFAULT 'example@example.com',
    mobile VARCHAR(15) DEFAULT '0000000000'
);

-- Insert users 
INSERT INTO users (name, roll_number, password, role, email, mobile)
VALUES
    ('Karan Verma',    '1111', '1111', 'student', 'karan.verma@example.com', '9012345678'),
    ('Priya Nair',     '2222', '2222', 'student', 'priya.nair@example.com',  '9023456789'),
    ('Sahil Bhatia',   '3333', '3333', 'admin',   'sahil.bhatia@example.com', '9034567890');

-- Create complaints table
CREATE TABLE complaints (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    roll_no VARCHAR(20) NOT NULL,
    email VARCHAR(100) NOT NULL,
    mobile VARCHAR(15) NOT NULL,
    category ENUM('Academics','Facilities','Hostel','Transport','Others') NOT NULL,
    message TEXT NOT NULL,
    status ENUM('Pending','In Progress','Resolved') DEFAULT 'Pending',
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Insert dummy complaints (5 total)
INSERT INTO complaints (name, roll_no, email, mobile, category, message, status)
VALUES
    ('Karan Verma', '1111', 'karan.verma@example.com', '9012345678', 'Academics', 'Need more practice sessions for coding.', 'Pending'),
    ('Priya Nair',  '2222', 'priya.nair@example.com',  '9023456789', 'Hostel', 'Broken window in hostel room.', 'In Progress'),
    ('Karan Verma', '1111', 'karan.verma@example.com', '9012345678', 'Facilities', 'Printer in library not working.', 'Resolved'),
    ('Sahil Bhatia','3333', 'sahil.bhatia@example.com','9034567890', 'Transport', 'College bus timing needs adjustment.', 'Pending'),
    ('Priya Nair',  '2222', 'priya.nair@example.com',  '9023456789', 'Others', 'Request for more online workshops.', 'Pending');

-- Test queries
SELECT * FROM users;
SELECT * FROM complaints;

--End of script


//------------------------------------------------------------//
